#!/bin/bash

# Function to start the DDNet server
function start_ddnet_server() {
    echo "Starting DDNet-Server"
    # Starte den Server im Hintergrund
    ./DDNet-Server -f server.cfg &
    # Speichere den PID des DDNet-Servers in einer Variablen
    ddnet_server_pid=$!
}

# Function to check and restart a service if needed
function check_and_restart_service() {
    local pid_variable_name="$1"
    local start_function="$2"
    local current_pid

    while true; do
        # Holen Sie sich die aktuelle PID aus der entsprechenden Variablen
        eval current_pid=\$$pid_variable_name

        # Überprüfen Sie, ob der Prozess mit der PID läuft
        if ! kill -0 $current_pid > /dev/null 2>&1; then
            echo "$pid_variable_name is not running. Restarting..."
            # Rufen Sie die entsprechende Startfunktion auf
            $start_function
        fi
        # Warte für 5 Sekunden, bevor der nächste Check durchgeführt wird
        sleep 5
    done
}

# Dont do anything if server.cfg already exists
if [ -f ./server.cfg ]; then
    echo "server.cfg already exists, skipping generation"

    check_and_restart_service "ddnet_server_pid" "start_ddnet_server" &
    # Wait for the background processes to finish
    wait
    exit 0
fi

# Copy default.cfg to server.cfg if server.cfg does not exist
cp ./data/autoexec_server.cfg server.cfg
mv ./data/autoexec_server.cfg ./data/autoexec_server.cfg.bak # temporary to prevent execution of autoexec_server.cfg on every start

# Add end comment to server.cfg
echo "# End of generated file" | cat - server.cfg > temp && mv temp server.cfg

# Schleife über alle Umgebungsvariablen mit dem TW_ Prefix
while IFS='=' read -r key value; do
    # Extrahiere den Namen des Einstellung aus der ENV-Variable und konvertiere in Kleinbuchstaben
    setting=$(echo "${key/TW_/}" | tr '[:upper:]' '[:lower:]')
    # Formatiere den Wert entsprechend
    formatted_value=$(echo "$value" | sed -e 's/=//')
    # Suche nach der entsprechenden Zeile in der Datei und lösche sie (falls sie existiert)
    sed -i "/$setting/d" server.cfg
    # Füge die ENV-Variable im gewünschten Format am Anfang der Datei ein
    echo "$setting $formatted_value" | cat - server.cfg > temp && mv temp server.cfg
done < <(env | grep '^TW_')

# add start comment to server.cfg
echo "# This file is automatically generated by the docker-entrypoint.sh script" | cat - ./server.cfg > temp && mv temp ./server.cfg

check_and_restart_service "ddnet_server_pid" "start_ddnet_server" &
# Warte auf das Ende der Hintergrundprozesse
wait
exit 0